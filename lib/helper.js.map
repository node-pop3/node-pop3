{"version":3,"file":"helper.js","names":["_constant","require","_os","stream2String","stream","maxBufferSize","maxLength","RAM","totalmem","Promise","resolve","reject","splitBuffer","Buffer","concat","finalBufferArr","finalBufferLength","_splitBuffer","length","on","_buffer","bufferToPush","push","err","finalBuffer","toString","listify","str","split","CRLF","filter","line","map"],"sources":["../src/helper.mjs"],"sourcesContent":["import { CRLF } from './constant.mjs';\nimport { totalmem, freemem } from \"os\";\n\nexport function stream2String(stream, maxBufferSize) {\n\n  let maxLength = maxBufferSize\n  if (!maxLength) {\n    const RAM = totalmem/1024/1024/1024\n    if (RAM <= 1) maxLength = 1*1024*1024\n    else if (RAM <= 2) maxLength = 2*1024*1024\n    else maxLength = 4*1024*1024\n\n  }\n  return new Promise((resolve, reject) => {\n    let splitBuffer = Buffer.concat([]);\n    let finalBufferArr = []\n    let finalBufferLength = 0\n    let {length} = splitBuffer;\n    stream.on('data', (_buffer) => {\n      length += _buffer.length;\n      finalBufferLength += _buffer.length;\n      if (length >= maxLength) {\n        const bufferToPush = Buffer.concat([splitBuffer, _buffer], length)\n        finalBufferArr.push(bufferToPush)\n        splitBuffer = Buffer.concat([])\n        length = 0\n      }\n      else splitBuffer = Buffer.concat([splitBuffer, _buffer], length);\n    });\n    stream.on('error', (err) => reject(err));\n    stream.on('end', () => {\n      let finalBuffer\n      if (finalBufferArr.length !== 0) {\n        finalBufferArr.push(splitBuffer)\n        finalBuffer = Buffer.concat(finalBufferArr, finalBufferLength);\n      } else finalBuffer = splitBuffer\n      resolve(finalBuffer.toString())\n    });\n  });\n}\n\nexport function listify(str) {\n  return str.split(CRLF)\n    .filter((line) => line)\n    .map((line) => line.split(' '));\n}\n"],"mappings":";;;;;;;AAAA,IAAAA,SAAA,GAAAC,OAAA;AACA,IAAAC,GAAA,GAAAD,OAAA;AAEO,SAASE,aAAaA,CAACC,MAAM,EAAEC,aAAa,EAAE;EAEnD,IAAIC,SAAS,GAAGD,aAAa;EAC7B,IAAI,CAACC,SAAS,EAAE;IACd,IAAMC,GAAG,GAAGC,YAAQ,GAAC,IAAI,GAAC,IAAI,GAAC,IAAI;IACnC,IAAID,GAAG,IAAI,CAAC,EAAED,SAAS,GAAG,CAAC,GAAC,IAAI,GAAC,IAAI,MAChC,IAAIC,GAAG,IAAI,CAAC,EAAED,SAAS,GAAG,CAAC,GAAC,IAAI,GAAC,IAAI,MACrCA,SAAS,GAAG,CAAC,GAAC,IAAI,GAAC,IAAI;EAE9B;EACA,OAAO,IAAIG,OAAO,CAAC,UAACC,OAAO,EAAEC,MAAM,EAAK;IACtC,IAAIC,WAAW,GAAGC,MAAM,CAACC,MAAM,CAAC,EAAE,CAAC;IACnC,IAAIC,cAAc,GAAG,EAAE;IACvB,IAAIC,iBAAiB,GAAG,CAAC;IACzB,IAAAC,YAAA,GAAeL,WAAW;MAArBM,MAAM,GAAAD,YAAA,CAANC,MAAM;IACXd,MAAM,CAACe,EAAE,CAAC,MAAM,EAAE,UAACC,OAAO,EAAK;MAC7BF,MAAM,IAAIE,OAAO,CAACF,MAAM;MACxBF,iBAAiB,IAAII,OAAO,CAACF,MAAM;MACnC,IAAIA,MAAM,IAAIZ,SAAS,EAAE;QACvB,IAAMe,YAAY,GAAGR,MAAM,CAACC,MAAM,CAAC,CAACF,WAAW,EAAEQ,OAAO,CAAC,EAAEF,MAAM,CAAC;QAClEH,cAAc,CAACO,IAAI,CAACD,YAAY,CAAC;QACjCT,WAAW,GAAGC,MAAM,CAACC,MAAM,CAAC,EAAE,CAAC;QAC/BI,MAAM,GAAG,CAAC;MACZ,CAAC,MACIN,WAAW,GAAGC,MAAM,CAACC,MAAM,CAAC,CAACF,WAAW,EAAEQ,OAAO,CAAC,EAAEF,MAAM,CAAC;IAClE,CAAC,CAAC;IACFd,MAAM,CAACe,EAAE,CAAC,OAAO,EAAE,UAACI,GAAG;MAAA,OAAKZ,MAAM,CAACY,GAAG,CAAC;IAAA,EAAC;IACxCnB,MAAM,CAACe,EAAE,CAAC,KAAK,EAAE,YAAM;MACrB,IAAIK,WAAW;MACf,IAAIT,cAAc,CAACG,MAAM,KAAK,CAAC,EAAE;QAC/BH,cAAc,CAACO,IAAI,CAACV,WAAW,CAAC;QAChCY,WAAW,GAAGX,MAAM,CAACC,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC;MAChE,CAAC,MAAMQ,WAAW,GAAGZ,WAAW;MAChCF,OAAO,CAACc,WAAW,CAACC,QAAQ,EAAE,CAAC;IACjC,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ;AAEO,SAASC,OAAOA,CAACC,GAAG,EAAE;EAC3B,OAAOA,GAAG,CAACC,KAAK,CAACC,cAAI,CAAC,CACnBC,MAAM,CAAC,UAACC,IAAI;IAAA,OAAKA,IAAI;EAAA,EAAC,CACtBC,GAAG,CAAC,UAACD,IAAI;IAAA,OAAKA,IAAI,CAACH,KAAK,CAAC,GAAG,CAAC;EAAA,EAAC;AACnC"}